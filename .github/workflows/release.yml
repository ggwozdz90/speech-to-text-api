name: release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.12'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: poetry install

    - name: Store next release version
      run: | 
        git config user.name 'github-actions[release-bot]'
        git config user.email 'github-actions[release-bot]@users.noreply.github.com'
        poetry run cz bump --yes --files-only
        RELEASE_VERSION=$(poetry version -s)
        echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
        git reset --hard
        git clean -fd

    - name: Create release branch and tag
      env:
        GITHUB_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}
      run: |
        git checkout -b release/v$RELEASE_VERSION
        poetry run cz bump --yes --changelog
        git push origin v$RELEASE_VERSION
        git push origin release/v$RELEASE_VERSION

    - name: Merge release branch to main branch
      env:
        GITHUB_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}
      run: |
        git checkout main
        git pull origin main
        git merge --no-ff release/v$RELEASE_VERSION
        git push origin main

    - name: Remove release branch
      env:
        GITHUB_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}
      run: git push origin --delete release/v$RELEASE_VERSION

    - name: Merge main branch to develop branch
      env:
        GITHUB_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}
      run: |
        git checkout develop
        git pull origin develop
        git merge --no-ff main
        git push origin develop
